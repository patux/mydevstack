#!/bin/bash
# Base template to create a localrc to bulid devstack
#
# A reference for a good localrc here:
# http://www.sebastien-han.fr/blog/2013/08/16/best-localrc-for-devstack/
#
. /etc/environment
# Adding havana repo
sudo apt-get install -y python-software-properties 
sudo add-apt-repository -y cloud-archive:havana
sudo apt-get update -y
sudo apt-get -y dist-upgrade

# start the devstack localrc configuration
git clone https://github.com/openstack-dev/devstack.git -b <%= @devstack_branch %> devstack
cd devstack
# Build localrc
# Misc
echo ADMIN_PASSWORD=password > localrc
echo DATABASE_PASSWORD=password >> localrc
echo RABBIT_PASSWORD=password >> localrc
echo SERVICE_PASSWORD=password >> localrc
echo SERVICE_TOKEN=tokentoken >> localrc

# Repos
echo CINDER_BRANCH=<%= @devstack_branch %> >> localrc
echo GLANCE_BRANCH=<%= @devstack_branch %> >> localrc
echo HORIZON_BRANCH=<%= @devstack_branch %> >> localrc
echo KEYSTONE_BRANCH=<%= @devstack_branch %> >> localrc
echo NOVA_BRANCH=<%= @devstack_branch %> >> localrc
echo QUANTUM_BRANCH=<%= @devstack_branch %> >> localrc
echo NEUTRON_BRANCH=<%= @devstack_branch %> >> localrc
echo SWIFT_BRANCH=<%= @devstack_branch %> >> localrc
echo HEAT_BRANCH=<%= @devstack_branch %> >> localrc
echo CEILOMETER_BRANCH=<%= @devstack_branch %> >> localrc
cat << EOF >> localrc 
# Reclone each time
RECLONE=yes

## For Keystone
KEYSTONE_TOKEN_FORMAT=PKI

# For Swift
SWIFT_REPLICAS=1
SWIFT_HASH=011688b44136573e209e

disable_service n-net

# Enable Logging
LOGFILE=/opt/stack/logs/stack.sh.log
VERBOSE=True
LOG_COLOR=True
SCREEN_LOGDIR=/opt/stack/logs

# Pre-requisite
ENABLED_SERVICES=rabbit,mysql,key

# If you want ZeroMQ instead of RabbitMQ (don't forget to un-declare 'rabbit' from the pre-requesite)
# ENABLED_SERVICES+=,-rabbit,-qpid,zeromq

# If you want Qpid instead of RabbitMQ (don't forget to un-declare 'rabbit' from the pre-requesite)
# ENABLED_SERVICES+=,-rabbit,-zeromq,qpid

# Horizon (Dashboard UI) - (always use the trunk)
ENABLED_SERVICES+=,horizon

# Nova - Compute Service
ENABLED_SERVICES+=,n-api,n-crt,n-obj,n-cpu,n-cond,n-sch
IMAGE_URLS+=",https://launchpad.net/cirros/trunk/0.3.0/+download/cirros-0.3.0-x86_64-disk.img"

# Nova Network - If you don't want to use Neutron and need a simple network setup (old good stuff!)
# ENABLED_SERVICES+=,n-net

# Nova Cells
# ENABLED_SERVICES+=,n-cell

# Glance - Image Service
ENABLED_SERVICES+=,g-api,g-reg

# Swift - Object Storage
ENABLED_SERVICES+=,s-proxy,s-object,s-container,s-account

# Neutron - Networking Service
# If Neutron is not declared the old good nova-network will be used
ENABLED_SERVICES+=,q-svc,q-agt,q-dhcp,q-l3,q-meta,neutron

# Neutron - Load Balancing
ENABLED_SERVICES+=,q-lbaas

# Neutron - VPN as a Service
ENABLED_SERVICES+=,q-vpn

# Neutron - Firewall as a Service
ENABLED_SERVICES+=,q-fwaas

# VLAN configuration
Q_PLUGIN=ml2
ENABLE_TENANT_VLANS=True

# GRE tunnel configuration
Q_PLUGIN=ml2
ENABLE_TENANT_TUNNELS=True

# VXLAN tunnel configuration
Q_PLUGIN=ml2
Q_ML2_TENANT_NETWORK_TYPE=vxlan   

# Cinder - Block Device Service
ENABLED_SERVICES+=,cinder,c-api,c-vol,c-sch,c-bak

# Heat - Orchestration Service
ENABLED_SERVICES+=,heat,h-api,h-api-cfn,h-api-cw,h-eng
IMAGE_URLS+=",http://fedorapeople.org/groups/heat/prebuilt-jeos-images/F17-x86_64-cfntools.qcow2,http://cloud-images.ubuntu.com/precise/current/precise-server-cloudimg-amd64-disk1.img"

# Ceilometer - Metering Service (metering + alarming)
ENABLED_SERVICES+=,ceilometer-acompute,ceilometer-acentral,ceilometer-collector,ceilometer-api
ENABLED_SERVICES+=,ceilometer-alarm-notify,ceilometer-alarm-eval

# Apache fronted for WSGI
APACHE_ENABLED_SERVICES+=keystone,swift

# Tempest
ENABLED_SERVICES+=,tempest

# Trove
ENABLED_SERVICES+=,tr-api,tr-tmgr,tr-cond,trove

EOF
<% if has_variable?("ipaddress_eth1") %><% then %>
echo HOST_IP_IFACE=eth1 >> localrc
<% else %>
echo HOST_IP_IFACE=eth0 >> localrc
<% end %>

# Build vms-talk.sh script
cat << EOS > $HOME/vms-talk.sh
#!/bin/bash
# Allowing guests in DevStack to talk to outside world 
# https://ask.openstack.org/en/question/1830/allowing-guests-in-devstack-to-talk-to-outside-world/
/sbin/iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
# Save lists
# https://help.ubuntu.com/community/IptablesHowTo
/sbin/iptables-save -c > /etc/iptables.rules
cat << EOF > /etc/network/if-pre-up.d/iptablesload
#!/bin/sh
/sbin/iptables-restore < /etc/iptables.rules
exit 0
EOF
cat << EOF > /etc/network/if-post-down.d/iptablessave
#!/bin/sh
/sbin/iptables-save -c > /etc/iptables.rules
if [ -f /etc/iptables.downrules ]; then
    /sbin/iptables-restore < /etc/iptables.downrules
fi
exit 0
EOF
chmod +x /etc/network/if-post-down.d/iptablessave
chmod +x /etc/network/if-pre-up.d/iptablesload
EOS
chmod +x $HOME/vms-talk.sh

./stack.sh

